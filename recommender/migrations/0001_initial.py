# Generated by Django 2.1.7 on 2019-04-29 18:51

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('movie_id', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('genres', models.CharField(max_length=200)),
                ('num_ratings', models.IntegerField(null=True)),
                ('rating_median', models.FloatField(null=True)),
                ('rating_mean', models.FloatField(null=True)),
                ('comparable', models.BooleanField(default=True)),
                ('liked', models.NullBooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='OnlineLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imdb_id', models.CharField(max_length=50)),
                ('youtube_id', models.CharField(max_length=50, null=True)),
                ('movie', models.ForeignKey(on_delete='CASCADE', to='recommender.Movie')),
            ],
        ),
        migrations.CreateModel(
            name='Similarity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('similarity_score', models.FloatField()),
                ('first_movie', models.ForeignKey(on_delete='CASCADE', related_name='first_movie', to='recommender.Movie')),
                ('second_movie', models.ForeignKey(on_delete='CASCADE', related_name='second_movie', to='recommender.Movie')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=50)),
                ('relevance', models.FloatField()),
                ('movie', models.ForeignKey(on_delete='CASCADE', to='recommender.Movie')),
            ],
        ),
    ]
